% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sourcerepo_objects.R
\name{AuditConfig}
\alias{AuditConfig}
\title{AuditConfig Object}
\usage{
AuditConfig(exemptedMembers = NULL, service = NULL,
  auditLogConfigs = NULL)
}
\arguments{
\item{exemptedMembers}{No description}

\item{service}{Specifies a service that will be enabled for audit logging}

\item{auditLogConfigs}{The configuration for logging of each type of permission}
}
\value{
AuditConfig object
}
\description{
AuditConfig Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Specifies the audit configuration for a service.It consists of which permission types are logged, and what identities, ifany, are exempted from logging.An AuditConifg must have one or more AuditLogConfigs.If there are AuditConfigs for both `allServices` and a specific service,the union of the two AuditConfigs is used for that service: the log_typesspecified in each AuditConfig are enabled, and the exempted_members in eachAuditConfig are exempted.Example Policy with multiple AuditConfigs:{  'audit_configs': [    {      'service': 'allServices'      'audit_log_configs': [        {          'log_type': 'DATA_READ',          'exempted_members': [            'user:foo@gmail.com'          ]        },        {          'log_type': 'DATA_WRITE',        },        {          'log_type': 'ADMIN_READ',        }      ]    },    {      'service': 'fooservice@googleapis.com'      'audit_log_configs': [        {          'log_type': 'DATA_READ',        },        {          'log_type': 'DATA_WRITE',          'exempted_members': [            'user:bar@gmail.com'          ]        }      ]    }  ]}For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READlogging. It also exempts foo@gmail.com from DATA_READ logging, andbar@gmail.com from DATA_WRITE logging.
}
