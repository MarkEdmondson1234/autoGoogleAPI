% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectrum_objects.R
\name{PawsGetSpectrumResponse}
\alias{PawsGetSpectrumResponse}
\title{PawsGetSpectrumResponse Object}
\usage{
PawsGetSpectrumResponse(databaseChange = NULL, deviceDesc = NULL,
  maxContiguousBwHz = NULL, maxTotalBwHz = NULL,
  needsSpectrumReport = NULL, rulesetInfo = NULL,
  spectrumSchedules = NULL, timestamp = NULL, type = NULL,
  version = NULL)
}
\arguments{
\item{databaseChange}{A database may include the databaseChange parameter to notify a device of a change to its database URI, providing one or more alternate database URIs}

\item{deviceDesc}{The database must return, in its available spectrum response, the device descriptor information it received in the master device's available spectrum request}

\item{maxContiguousBwHz}{The database may return a constraint on the allowed maximum contiguous bandwidth (in Hertz)}

\item{maxTotalBwHz}{The database may return a constraint on the allowed maximum total bandwidth (in Hertz), which need not be contiguous}

\item{needsSpectrumReport}{For regulatory domains that require a spectrum-usage report from devices, the database must return true for this parameter if the spectrum schedule list is not empty; otherwise, the database will either return false or omit this parameter}

\item{rulesetInfo}{The database should return ruleset information, which identifies the applicable regulatory authority and ruleset for the available spectrum response}

\item{spectrumSchedules}{The available spectrum response must contain a spectrum schedule list}

\item{timestamp}{The database includes a timestamp of the form YYYY-MM-DDThh:mm:ssZ (Internet timestamp format per RFC3339) in its available spectrum response}

\item{type}{The message type (e}

\item{version}{The PAWS version}
}
\value{
PawsGetSpectrumResponse object
}
\description{
PawsGetSpectrumResponse Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
The response message for the available spectrum query which contains a schedule of available spectrum for the device.
}
