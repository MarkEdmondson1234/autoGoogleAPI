% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deploymentmanager_objects.R
\name{AuditConfig}
\alias{AuditConfig}
\title{Google Cloud Deployment Manager Alpha API Objects 
The Deployment Manager API allows users to declaratively configure, deploy and run complex solutions on the Google Cloud Platform.}
\usage{
AuditConfig(auditLogConfigs = NULL, exemptedMembers = NULL,
  service = NULL)
}
\arguments{
\item{auditLogConfigs}{The configuration for logging of each type of permission}

\item{exemptedMembers}{No description}

\item{service}{Specifies a service that will be enabled for audit logging}
}
\value{
AuditConfig object
}
\description{
Auto-generated code by googleAuthR::gar_create_api_objects
 at 2017-03-05 19:44:58
filename: /Users/mark/dev/R/autoGoogleAPI/googledeploymentmanageralpha.auto/R/deploymentmanager_objects.R
api_json: api_json
}
\details{
Objects for use by the functions created by googleAuthR::gar_create_api_skeleton
AuditConfig Object


Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Specifies the audit configuration for a service. It consists of which permission types are logged, and what identities, if any, are exempted from logging. An AuditConifg must have one or more AuditLogConfigs.If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditConfig are exempted. Example Policy with multiple AuditConfigs: { 'audit_configs': [ { 'service': 'allServices' 'audit_log_configs': [ { 'log_type': 'DATA_READ', 'exempted_members': [ 'user:foo@gmail.com' ] }, { 'log_type': 'DATA_WRITE', }, { 'log_type': 'ADMIN_READ', } ] }, { 'service': 'fooservice@googleapis.com' 'audit_log_configs': [ { 'log_type': 'DATA_READ', }, { 'log_type': 'DATA_WRITE', 'exempted_members': [ 'user:bar@gmail.com' ] } ] } ] } For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts foo@gmail.com from DATA_READ logging, and bar@gmail.com from DATA_WRITE logging.
}
