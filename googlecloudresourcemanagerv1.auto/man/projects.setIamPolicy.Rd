% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloudresourcemanager_functions.R
\name{projects.setIamPolicy}
\alias{projects.setIamPolicy}
\title{Sets the IAM access control policy for the specified Project. Replacesany existing policy.The following constraints apply when using `setIamPolicy()`:+ Project does not support `allUsers` and `allAuthenticatedUsers` as`members` in a `Binding` of a `Policy`.+ The owner role can be granted only to `user` and `serviceAccount`.+ Service accounts can be made owners of a project directlywithout any restrictions. However, to be added as an owner, a user must beinvited via Cloud Platform console and must accept the invitation.+ A user cannot be granted the owner role using `setIamPolicy()`. The usermust be granted the owner role using the Cloud Platform Console and mustexplicitly accept the invitation.+ Invitations to grant the owner role cannot be sent using`setIamPolicy()`;they must be sent only using the Cloud Platform Console.+ Membership changes that leave the project without any owners that haveaccepted the Terms of Service (ToS) will be rejected.+ There must be at least one owner who has accepted the Terms ofService (ToS) agreement in the policy. Calling `setIamPolicy()` toto remove the last ToS-accepted owner from the policy will fail. Thisrestriction also applies to legacy projects that no longer have ownerswho have accepted the ToS. Edits to IAM policies will be rejected untilthe lack of a ToS-accepting owner is rectified.+ Calling this method requires enabling the App Engine Admin API.Note: Removing service accounts from policies or changing their rolescan render services completely inoperable. It is important to understandhow the service account is being used before removing or updating itsroles.}
\usage{
projects.setIamPolicy(SetIamPolicyRequest, resource)
}
\arguments{
\item{SetIamPolicyRequest}{The \link{SetIamPolicyRequest} object to pass to this method}

\item{resource}{REQUIRED: The resource for which the policy is being specified}
}
\description{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_skeleton}}
}
\details{
Authentication scopes used by this function are:
\itemize{
  \item https://www.googleapis.com/auth/cloud-platform
}

Set \code{options(googleAuthR.scopes.selected = c(https://www.googleapis.com/auth/cloud-platform)}
Then run \code{googleAuthR::gar_auth()} to authenticate.
See \code{\link[googleAuthR]{gar_auth}} for details.
}
\seealso{
\href{https://cloud.google.com/resource-manager}{Google Documentation}

Other SetIamPolicyRequest functions: \code{\link{SetIamPolicyRequest}},
  \code{\link{organizations.setIamPolicy}}
}
