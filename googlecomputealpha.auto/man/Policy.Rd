% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_objects.R
\name{Policy}
\alias{Policy}
\title{Policy Object}
\usage{
Policy(auditConfigs = NULL, bindings = NULL, etag = NULL,
  iamOwned = NULL, rules = NULL, version = NULL)
}
\arguments{
\item{auditConfigs}{Specifies cloud audit logging configuration for this policy}

\item{bindings}{Associates a list of `members` to a `role`}

\item{etag}{`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other}

\item{iamOwned}{No description}

\item{rules}{If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied}

\item{version}{Version of the `Policy`}
}
\value{
Policy object
}
\description{
Policy Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources.A `Policy` consists of a list of `bindings`. A `Binding` binds a list of `members` to a `role`, where the members can be user accounts, Google groups, Google domains, and service accounts. A `role` is a named list of permissions defined by IAM.**Example**{ 'bindings': [ { 'role': 'roles/owner', 'members': [ 'user:mike@example.com', 'group:admins@example.com', 'domain:google.com', 'serviceAccount:my-other-app@appspot.gserviceaccount.com', ] }, { 'role': 'roles/viewer', 'members': ['user:sean@example.com'] } ] }For a description of IAM and its features, see the [IAM developer's guide](https://cloud.google.com/iam).
}
\seealso{
Other Policy functions: \code{\link{backendBuckets.setIamPolicy}},
  \code{\link{hosts.setIamPolicy}},
  \code{\link{instances.setIamPolicy}},
  \code{\link{subnetworks.setIamPolicy}}
}
