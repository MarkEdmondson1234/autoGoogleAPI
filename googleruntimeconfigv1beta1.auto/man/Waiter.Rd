% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runtimeconfig_objects.R
\name{Waiter}
\alias{Waiter}
\title{Waiter Object}
\usage{
Waiter(error = NULL, failure = NULL, success = NULL, done = NULL,
  createTime = NULL, timeout = NULL, name = NULL)
}
\arguments{
\item{error}{[Output Only] If the waiter ended due to a failure or timeout, this value}

\item{failure}{[Optional] The failure condition of this waiter}

\item{success}{[Required] The success condition}

\item{done}{[Output Only] If the value is `false`, it means the waiter is still waiting}

\item{createTime}{[Output Only] The instant at which this Waiter resource was created}

\item{timeout}{[Required] Specifies the timeout of the waiter in seconds, beginning from}

\item{name}{The name of the Waiter resource, in the format:}
}
\value{
Waiter object
}
\description{
Waiter Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
A Waiter resource waits for some end condition within a RuntimeConfig resourceto be met before it returns. For example, assume you have a distributedsystem where each node writes to a Variable resource indidicating the node'sreadiness as part of the startup process.You then configure a Waiter resource with the success condition set to waituntil some number of nodes have checked in. Afterwards, your applicationruns some arbitrary code after the condition has been met and the waiterreturns successfully.Once created, a Waiter resource is immutable.To learn more about using waiters, read the[Creating a Waiter](/deployment-manager/runtime-configurator/creating-a-waiter)documentation.
}
