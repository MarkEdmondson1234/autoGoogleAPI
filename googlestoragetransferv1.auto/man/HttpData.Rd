% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storagetransfer_objects.R
\name{HttpData}
\alias{HttpData}
\title{HttpData Object}
\usage{
HttpData(listUrl = NULL)
}
\arguments{
\item{listUrl}{The URL that points to the file that stores the object list entries}
}
\value{
HttpData object
}
\description{
HttpData Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
An HttpData specifies a list of objects on the web to be transferred over HTTP. The information of the objects to be transferred is contained in a file referenced by a URL. The first line in the file must be 'TsvHttpData-1.0', which specifies the format of the file. Subsequent lines specify the information of the list of objects, one object per list entry. Each entry has the following tab-delimited fields: * HTTP URL * Length * MD5 - This field is a base64-encoded MD5 hash of the object An HTTP URL that points to the object to be transferred. It must be a valid URL with URL scheme HTTP or HTTPS. When an object with URL `http(s)://hostname:port/` is transferred to the data sink, the name of the object at the data sink is `/`. Length and MD5 provide the size and the base64-encoded MD5 hash of the object. If Length does not match the actual length of the object fetched, the object will not be transferred. If MD5 does not match the MD5 computed from the transferred bytes, the object transfer will fail. `lastModificationTime` is not available in HttpData objects. The objects that the URL list points to must allow public access. Storage Transfer Service obeys `robots.txt` rules and requires the HTTP server to support Range requests and to return a Content-Length header in each response.
}
