% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/servicemanagement_objects.R
\name{Policy}
\alias{Policy}
\title{Policy Object}
\usage{
Policy(etag = NULL, iamOwned = NULL, rules = NULL, version = NULL,
  auditConfigs = NULL, bindings = NULL)
}
\arguments{
\item{etag}{`etag` is used for optimistic concurrency control as a way to help}

\item{iamOwned}{No description}

\item{rules}{If more than one rule is specified, the rules are applied in the following}

\item{version}{Version of the `Policy`}

\item{auditConfigs}{Specifies cloud audit logging configuration for this policy}

\item{bindings}{Associates a list of `members` to a `role`}
}
\value{
Policy object
}
\description{
Policy Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Defines an Identity and Access Management (IAM) policy. It is used tospecify access control policies for Cloud Platform resources.A `Policy` consists of a list of `bindings`. A `Binding` binds a list of`members` to a `role`, where the members can be user accounts, Google groups,Google domains, and service accounts. A `role` is a named list of permissionsdefined by IAM.**Example**    {      'bindings': [        {          'role': 'roles/owner',          'members': [            'user:mike@example.com',            'group:admins@example.com',            'domain:google.com',            'serviceAccount:my-other-app@appspot.gserviceaccount.com',          ]        },        {          'role': 'roles/viewer',          'members': ['user:sean@example.com']        }      ]    }For a description of IAM and its features, see the[IAM developer's guide](https://cloud.google.com/iam).
}
