% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iam_objects.R
\name{ServiceAccount}
\alias{ServiceAccount}
\title{ServiceAccount Object}
\usage{
ServiceAccount(displayName = NULL, etag = NULL, name = NULL,
  email = NULL, projectId = NULL, oauth2ClientId = NULL,
  uniqueId = NULL)
}
\arguments{
\item{displayName}{Optional}

\item{etag}{Used to perform a consistent read-modify-write}

\item{name}{The resource name of the service account in the following format:}

\item{email}{@OutputOnly The email address of the service account}

\item{projectId}{@OutputOnly The id of the project that owns the service account}

\item{oauth2ClientId}{@OutputOnly}

\item{uniqueId}{@OutputOnly The unique and stable id of the service account}
}
\value{
ServiceAccount object
}
\description{
ServiceAccount Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
A service account in the Identity and Access Management API.To create a service account, specify the `project_id` and the `account_id`for the account.  The `account_id` is unique within the project, and is usedto generate the service account email address and a stable`unique_id`.If the account already exists, the account's resource name is returnedin util::Status's ResourceInfo.resource_name in the format ofprojects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}. The caller canuse the name in other methods to access the account.All other methods can identify the service account using the format`projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.Using `-` as a wildcard for the project will infer the project fromthe account. The `account` value can be the `email` address or the`unique_id` of the service account.
}
\seealso{
Other ServiceAccount functions: \code{\link{projects.serviceAccounts.update}}
}
