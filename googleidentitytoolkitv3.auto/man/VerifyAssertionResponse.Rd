% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/identitytoolkit_objects.R
\name{VerifyAssertionResponse}
\alias{VerifyAssertionResponse}
\title{VerifyAssertionResponse Object}
\usage{
VerifyAssertionResponse(action = NULL, appInstallationUrl = NULL,
  appScheme = NULL, context = NULL, dateOfBirth = NULL,
  displayName = NULL, email = NULL, emailRecycled = NULL,
  emailVerified = NULL, errorMessage = NULL, expiresIn = NULL,
  federatedId = NULL, firstName = NULL, fullName = NULL, idToken = NULL,
  inputEmail = NULL, isNewUser = NULL, language = NULL, lastName = NULL,
  localId = NULL, needConfirmation = NULL, needEmail = NULL,
  nickName = NULL, oauthAccessToken = NULL, oauthAuthorizationCode = NULL,
  oauthExpireIn = NULL, oauthIdToken = NULL, oauthRequestToken = NULL,
  oauthScope = NULL, oauthTokenSecret = NULL, originalEmail = NULL,
  photoUrl = NULL, providerId = NULL, rawUserInfo = NULL,
  refreshToken = NULL, screenName = NULL, timeZone = NULL,
  verifiedProvider = NULL)
}
\arguments{
\item{action}{The action code}

\item{appInstallationUrl}{URL for OTA app installation}

\item{appScheme}{The custom scheme used by mobile app}

\item{context}{The opaque value used by the client to maintain context info between the authentication request and the IDP callback}

\item{dateOfBirth}{The birth date of the IdP account}

\item{displayName}{The display name of the user}

\item{email}{The email returned by the IdP}

\item{emailRecycled}{It's true if the email is recycled}

\item{emailVerified}{The value is true if the IDP is also the email provider}

\item{errorMessage}{Client error code}

\item{expiresIn}{If idToken is STS id token, then this field will be expiration time of STS id token in seconds}

\item{federatedId}{The unique ID identifies the IdP account}

\item{firstName}{The first name of the user}

\item{fullName}{The full name of the user}

\item{idToken}{The ID token}

\item{inputEmail}{It's the identifier param in the createAuthUri request if the identifier is an email}

\item{isNewUser}{True if it's a new user sign-in, false if it's a returning user}

\item{language}{The language preference of the user}

\item{lastName}{The last name of the user}

\item{localId}{The RP local ID if it's already been mapped to the IdP account identified by the federated ID}

\item{needConfirmation}{Whether the assertion is from a non-trusted IDP and need account linking confirmation}

\item{needEmail}{Whether need client to supply email to complete the federated login flow}

\item{nickName}{The nick name of the user}

\item{oauthAccessToken}{The OAuth2 access token}

\item{oauthAuthorizationCode}{The OAuth2 authorization code}

\item{oauthExpireIn}{The lifetime in seconds of the OAuth2 access token}

\item{oauthIdToken}{The OIDC id token}

\item{oauthRequestToken}{The user approved request token for the OpenID OAuth extension}

\item{oauthScope}{The scope for the OpenID OAuth extension}

\item{oauthTokenSecret}{The OAuth1 access token secret}

\item{originalEmail}{The original email stored in the mapping storage}

\item{photoUrl}{The URI of the public accessible profiel picture}

\item{providerId}{The IdP ID}

\item{rawUserInfo}{Raw IDP-returned user info}

\item{refreshToken}{If idToken is STS id token, then this field will be refresh token}

\item{screenName}{The screen_name of a Twitter user or the login name at Github}

\item{timeZone}{The timezone of the user}

\item{verifiedProvider}{When action is 'map', contains the idps which can be used for confirmation}
}
\value{
VerifyAssertionResponse object
}
\description{
VerifyAssertionResponse Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Response of verifying the IDP assertion.
}
