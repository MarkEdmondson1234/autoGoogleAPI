% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/identitytoolkit_objects.R
\name{IdentitytoolkitRelyingpartyUploadAccountRequest}
\alias{IdentitytoolkitRelyingpartyUploadAccountRequest}
\title{IdentitytoolkitRelyingpartyUploadAccountRequest Object}
\usage{
IdentitytoolkitRelyingpartyUploadAccountRequest(allowOverwrite = NULL,
  delegatedProjectNumber = NULL, hashAlgorithm = NULL, memoryCost = NULL,
  rounds = NULL, saltSeparator = NULL, sanityCheck = NULL,
  signerKey = NULL, targetProjectId = NULL, users = NULL)
}
\arguments{
\item{allowOverwrite}{Whether allow overwrite existing account when user local_id exists}

\item{delegatedProjectNumber}{GCP project number of the requesting delegated app}

\item{hashAlgorithm}{The password hash algorithm}

\item{memoryCost}{Memory cost for hash calculation}

\item{rounds}{Rounds for hash calculation}

\item{saltSeparator}{The salt separator}

\item{sanityCheck}{If true, backend will do sanity check(including duplicate email and federated id) when uploading account}

\item{signerKey}{The key for to hash the password}

\item{targetProjectId}{Specify which project (field value is actually project id) to operate}

\item{users}{The account info to be stored}
}
\value{
IdentitytoolkitRelyingpartyUploadAccountRequest object
}
\description{
IdentitytoolkitRelyingpartyUploadAccountRequest Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
Request to upload user account in batch.
}
\seealso{
Other IdentitytoolkitRelyingpartyUploadAccountRequest functions: \code{\link{relyingparty.uploadAccount}}
}
